SELECT location,date,total_cases,new_cases,total_deaths,population
FROM covid_deaths
order by 1,2;

-- LOOKING AT TOTAL CASES VS TOTAL DEATHS
--Shows likelihood of dying if you contract covid-19 depending on your country

SELECT location,date,total_cases,total_deaths, (total_deaths/total_cases*100) as DeathPercentage
FROM covid_deaths
order by 1,2;

SELECT location,date,total_cases,total_deaths, (total_deaths/total_cases*100) as DeathPercentage
FROM covid_deaths
WHERE LOCATION LIKE '%Spain%'
order by 1,2;

-- LOOKING AT TOTAL CASES VS POPULATION 
-- Shows the likelihood of contracting covid-19 depending on the country and the date

SELECT CONTINENT,location,date,total_cases,total_deaths, (total_cases/population*100) as InfectionRate
FROM covid_deaths
WHERE CONTINENT LIKE '%Europe%'
order by 2,3;

SELECT CONTINENT,location,date,total_cases,total_deaths, (total_cases/population*100) as InfectionRate
FROM covid_deaths
WHERE LOCATION LIKE '%Spain%'
order by 2,3;

-- Looking at countries with highest Infection Rate

SELECT CONTINENT,location,POPULATION,MAX(total_cases) as HighestInfectionCount,total_deaths, (total_cases/population*100) as InfectionRate
FROM covid_deaths
WHERE CONTINENT NOTNULL
GROUP BY location
order by INFECTIONRATE DESC;

-- SHOWING COUNTRIES WITH HIGHEST DEATHCOUNT PER POPULATION

SELECT LOCATION, MAX(CAST(Total_Deaths AS INTEGER)) as TotalDeathCount
FROM covid_deaths
WHERE CONTINENT NOTNULL
GROUP BY location
ORDER BY TotalDeathCount DESC;

-- BREAKING THINGS DOWN BY CONTINENT

SELECT LOCATION, MAX(CAST(Total_Deaths AS INTEGER)) as TotalDeathCount
FROM covid_deaths
WHERE CONTINENT IS NULL
GROUP BY LOCATION
ORDER BY TotalDeathCount DESC;


-- SHOWING THE CONTINENTS WITH THE HIGHEST DEATH COUNT PER POPULATION
 
SELECT CONTINENT, MAX(CAST(Total_Deaths AS INTEGER)) as TotalDeathCount
FROM covid_deaths
WHERE CONTINENT IS NOT NULL
GROUP BY CONTINENT
ORDER BY TotalDeathCount DESC;

-- GLOBAL NUMBERS -> Cases and deaths per day

SELECT DATE, SUM(CAST(NEW_CASES AS INTEGER))AS NEW_CASES_TOTAL, SUM(CAST(NEW_DEATHS AS INTEGER))AS NEW_DEATHS_TOTAL, SUM(CAST(NEW_DEATHS AS INTEGER))/SUM(NEW_CASES)*100 AS DEATHPERCENTAGE
FROM covid_deaths
WHERE CONTINENT IS NOT NULL
GROUP BY date
ORDER BY 1,2;

-- GLOBAL NUMBERS -> Overall data

SELECT SUM(CAST(NEW_CASES AS INTEGER))AS NEW_CASES_TOTAL, SUM(CAST(NEW_DEATHS AS INTEGER))AS NEW_DEATHS_TOTAL, SUM(CAST(NEW_DEATHS AS INTEGER))/SUM(NEW_CASES)*100 AS DEATHPERCENTAGE
FROM covid_deaths
WHERE CONTINENT IS NOT NULL
--GROUP BY date
ORDER BY 1,2;

-- LOOKING AT TOTAL POPULATION VS VACCINATIONS

SELECT d.CONTINENT, d.LOCATION, d.DATE, d.POPULATION, v.NEW_VACCINATIONS
,SUM(CAST(v.NEW_VACCINATIONS AS INTEGER)) OVER (Partition by d.LOCATION ORDER BY d.LOCATION,d.DATE) AS ACUM_VACCINATIONS
FROM covid_deaths d
JOIN covid_vaccinations v
   ON d.LOCATION = v.LOCATION 
   and d.DATE = v.DATE
WHERE d.CONTINENT IS NOT NULL
order by 2,3;

-- USE CTE

With PopvsVac (Continent,Location,Date,Population,new_vaccinations,ACUM_VACCINATIONS)
as
(
SELECT d.CONTINENT, d.LOCATION, d.DATE, d.POPULATION, v.NEW_VACCINATIONS,SUM(CAST(v.NEW_VACCINATIONS AS INTEGER)) OVER (Partition by d.LOCATION ORDER BY d.LOCATION,d.DATE) AS ACUM_VACCINATIONS
FROM covid_deaths d
JOIN covid_vaccinations v
   ON d.LOCATION = v.LOCATION 
   and d.DATE = v.DATE
WHERE d.CONTINENT IS NOT NULL
order by 2,3
) 

SELECT *,(CAST(ACUM_VACCINATIONS AS REAL)/POPULATION)*100 AS VACVSPOP FROM PopvsVac;

-- CREATE TABLE

DROP TABLE IF EXISTS PERCENTPOPULATIONVACCINATED;
CREATE TABLE PERCENTPOPULATIONVACCINATED
(
CONTINENT nvarchar(255),
LOCATION nvarchar(255),
Date DATETIME,
Population NUMERIC,
New_vaccinations NUMERIC,
ACUM_VACCINATIONS NUMERIC
);

DROP TABLE IF EXISTS CONTINENTS;

INSERT INTO PERCENTPOPULATIONVACCINATED
SELECT d.CONTINENT, d.LOCATION, d.DATE, d.POPULATION, v.NEW_VACCINATIONS,SUM(CAST(v.NEW_VACCINATIONS AS INTEGER)) OVER (Partition by d.LOCATION ORDER BY d.LOCATION,d.DATE) AS ACUM_VACCINATIONS
FROM covid_deaths d
JOIN covid_vaccinations v
   ON d.LOCATION = v.LOCATION 
   and d.DATE = v.DATE
WHERE d.CONTINENT IS NOT NULL
order by 2,3;

SELECT *,(CAST(ACUM_VACCINATIONS AS REAL)/POPULATION)*100 AS VACVSPOP FROM PERCENTPOPULATIONVACCINATED;

-- CREATING A VIEW

DROP VIEW IF EXISTS PCTPOPULATIONVACCINATED;

CREATE VIEW PCTPOPULATIONVACCINATED AS
SELECT d.CONTINENT, d.LOCATION, d.DATE, d.POPULATION, v.NEW_VACCINATIONS,SUM(CAST(v.NEW_VACCINATIONS AS INTEGER)) OVER (Partition by d.LOCATION ORDER BY d.LOCATION,d.DATE) AS ACUM_VACCINATIONS
FROM covid_deaths d
JOIN covid_vaccinations v
   ON d.LOCATION = v.LOCATION 
   and d.DATE = v.DATE
WHERE d.CONTINENT IS NOT NULL
ORDER BY 2,3;

SELECT * FROM PCTPOPULATIONVACCINATED LIMIT 50;


